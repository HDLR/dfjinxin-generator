package ${package}.${project}.modules.service.impl;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.seaboxdata.${project}.service.modules.dao.${className}Dao;
import com.seaboxdata.${project}.service.modules.service.${className}Service;
import com.seaboxdata.commons.core.util.api.PageUtils;
import com.seaboxdata.commons.core.util.api.Query;
import org.springframework.stereotype.Service;
import java.util.Map;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import org.springframework.beans.BeanUtils;
import com.seaboxdata.${project}.service.modules.model.${className};
import com.seaboxdata.${project}.api.vo.${className}VO;


@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Dao, ${className}> implements ${className}Service {

    @Override
    public PageUtils queryPage(Map<String, Object> params) {
        IPage<${className}> page = this.page(
                new Query<${className}>().getPage(params),
                new QueryWrapper<>()
        );

        return new PageUtils(page);
    }

    @Override
    public ${className}VO queryById(Long id) {
        ${className} ${classname} = this.getById(id);
        ${className}VO ${classname}VO = new ${className}VO();
        BeanUtils.copyProperties(${classname}, ${classname}VO);
        return ${classname}VO;
    }

    @Override
    public Boolean save(${className}VO ${classname}VO) {
        ${className} ${classname} = new ${className}();
        BeanUtils.copyProperties(${classname}VO, ${classname});
        this.save(${classname});
        return true;
    }

    @Override
    public Boolean update(${className}VO ${classname}VO) {
        ${className} ${classname} = new ${className}();
        BeanUtils.copyProperties(${classname}VO, ${classname});
        this.updateById(${classname});
        return true;
    }

}